services:
  filesystem:
    image: claude-mcp-fs
    build:
      context: .
      dockerfile: filesystem.Dockerfile
    container_name: mcp-filesystem
    volumes:
      - type: bind
        source: ./data/allowed
        target: /workspace
        bind:
          propagation: rprivate
    environment:
      - FILESYSTEM_PATH=${FILESYSTEM_PATH}
    ports:
      - "${FILESYSTEM_PORT}:4000"
    restart: unless-stopped

  sqlite:
    image: claude-mcp-sqlite
    build:
      context: .
      dockerfile: sqlite.Dockerfile
    container_name: mcp-sqlite
    volumes:
      - type: bind
        source: ./data/allowed
        target: /workspace
        bind:
          propagation: rprivate
    environment:
      - SQLITE_PATH=${SQLITE_PATH}
    ports:
      - "${SQLITE_PORT}:4000"
    restart: unless-stopped

  git:
    image: claude-mcp-git
    build:
      context: .
      dockerfile: git.Dockerfile
    container_name: mcp-git
    volumes:
      - type: bind
        source: ./data/allowed
        target: /workspace
        bind:
          propagation: rprivate
    environment:
      - GIT_PATH=${GIT_PATH}
    ports:
      - "${GIT_PORT}:4000"
    restart: unless-stopped

  postgres:
    image: claude-mcp-postgres
    build:
      context: .
      dockerfile: postgres.Dockerfile
    container_name: mcp-postgres
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped

  memory:
    image: claude-mcp-memory
    build:
      context: .
      dockerfile: memory.Dockerfile
    container_name: mcp-memory
    ports:
      - "${MEMORY_PORT}:4000"
    restart: unless-stopped

  brave-search:
    image: claude-mcp-brave-search
    build:
      context: .
      dockerfile: brave-search.Dockerfile
    container_name: mcp-brave-search
    environment:
      - BRAVE_API_KEY=${BRAVE_API_KEY}
    ports:
      - "${BRAVE_PORT}:4000"
    restart: unless-stopped

  everything:
    image: claude-mcp-everything
    build:
      context: .
      dockerfile: everything.Dockerfile
    container_name: mcp-everything
    ports:
      - "${EVERYTHING_PORT}:4000"
    restart: unless-stopped

  puppeteer:
    image: claude-mcp-puppeteer
    build:
      context: .
      dockerfile: puppeteer.Dockerfile
    container_name: mcp-puppeteer
    ports:
      - "${PUPPETEER_PORT}:4000"
    restart: unless-stopped

  github:
    image: claude-mcp-github
    build:
      context: .
      dockerfile: github.Dockerfile
    container_name: mcp-github
    environment:
      - GITHUB_API_KEY=${GITHUB_API_KEY}
    ports:
      - "${GITHUB_PORT}:4000"
    restart: unless-stopped

  sequential-thinking:
    image: claude-mcp-sequential-thinking
    build:
      context: .
      dockerfile: sequential-thinking.Dockerfile
    container_name: mcp-sequential-thinking
    ports:
      - "${SEQUENTIAL_THINKING_PORT}:4000"
    restart: unless-stopped

  gitlab:
    image: claude-mcp-gitlab
    build:
      context: .
      dockerfile: gitlab.Dockerfile
    container_name: mcp-gitlab
    environment:
      - GITLAB_PERSONAL_ACCESS_TOKEN=${GITLAB_PERSONAL_ACCESS_TOKEN}
      - GITLAB_API_URL=https://gitlab.com/api/v4
    ports:
      - "${GITLAB_PORT}:4000"
    restart: unless-stopped

  time:
    image: claude-mcp-time
    build:
      context: .
      dockerfile: time.Dockerfile
    container_name: mcp-time
    ports:
      - "${TIME_PORT}:4000"
    restart: unless-stopped